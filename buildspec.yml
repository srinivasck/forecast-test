#Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
#SPDX-License-Identifier: MIT-0
version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.7

  pre_build:
    commands:
      - echo Start Deploy Lambda...
  build:
    commands:
      - pip install --user aws-sam-cli
      - USER_BASE_PATH=$(python -m site --user-base)
      - export PATH=$PATH:$USER_BASE_PATH/bin
      - aws s3 cp forecast-model-config.json s3://$ForecastDevDataBucket/forecast-model-config.json
      # update Raw data processing logic
      - sam build -t arcus-dev-lambda-rawdataprocessor.yml
      - sam package --s3-bucket $SAM_Bucket --output-template-file rawdataprocessor.yml
      - sam deploy --force-upload true --template-file rawdataprocessor.yml --stack-name arcus-dev--lambda-rawdataprocessor --capabilities CAPABILITY_NAMED_IAM --parameter-overrides  S3BucketName=$ForecastDevDataBucket
      # update create historical data
      - sam build -t arcus-dev-lambda-createDataSetGroup.yml
      - sam package --s3-bucket $SAM_Bucket --output-template-file createDataSetGroup.yml
      - sam deploy --force-upload true --template-file createDataSetGroup.yml --stack-name arcus-dev-lambda-createDataSetGroup --capabilities CAPABILITY_NAMED_IAM --parameter-overrides  S3BucketName=$ForecastDevDataBucket S3ObjectCreateSNSTopicARN=$S3ObjectCreateSNSTopicARN
      # update create trainDefaultPredictor
      - sam build -t arcus-dev-lambda-trainDefaultPredictor.yml
      - sam package --s3-bucket $SAM_Bucket --output-template-file trainDefaultPredictor.yml
      - sam deploy --force-upload true --template-file trainDefaultPredictor.yml --stack-name arcus-dev-lambda-trainDefaultPredictor --capabilities CAPABILITY_NAMED_IAM --parameter-overrides  S3BucketName=$ForecastDevDataBucket
      # update create generateDefaultForecast
      - sam build -t arcus-dev-lambda-generateDefaultForecast.yml
      - sam package --s3-bucket $SAM_Bucket --output-template-file generateDefaultForecast.yml
      - sam deploy --force-upload true --template-file generateDefaultForecast.yml --stack-name arcus-dev-lambda-generateDefaultForecast --capabilities CAPABILITY_NAMED_IAM
      # update forecast data export
      - sam build -t arcus-dev-lambda-generateForecastExport.yml
      - sam package --s3-bucket $SAM_Bucket --output-template-file generateForecastExport.yml
      - sam deploy --force-upload true --template-file generateForecastExport.yml --stack-name arcus-dev-lambda-generateForecastExport --capabilities CAPABILITY_NAMED_IAM --parameter-overrides  S3BucketName=$ForecastDevDataBucket
      # update forecast metrics generator
      - sam build -t arcus-dev-lambda-forecastMetrics.yml
      - sam package --s3-bucket $SAM_Bucket --output-template-file forecastMetrics.yml
      - sam deploy --force-upload true --template-file forecastMetrics.yml --stack-name arcus-dev-lambda-forecastMetrics --capabilities CAPABILITY_NAMED_IAM --parameter-overrides  S3BucketName=$ForecastDevDataBucket MetricsNameSpace=$MetricsNameSpace
      # update create deleteExpiredForecast
      - sam build -t arcus-dev-lambda-deleteExpiredForecast.yml
      - sam package --s3-bucket $SAM_Bucket --output-template-file deleteExpiredForecast.yml
      - sam deploy --force-upload true --template-file deleteExpiredForecast.yml --stack-name arcus-dev-lambda-deleteExpiredForecast --capabilities CAPABILITY_NAMED_IAM --parameter-overrides  NumberOfForecastsToKeep=$NumberOfForecastsToKeep

  post_build:
    commands:
      - echo Build and deploy completed at `date`
